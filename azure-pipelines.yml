resources:
- repo: self

jobs:
- job: windows

  displayName: 'Windows'

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - powershell: dotnet build src\azure-devops-test.sln
    workingDirectory: $(Build.SourcesDirectory)
    displayName: Compile

  - powershell: |
      Set-PSDebug -Trace 2;
      (Get-ChildItem -Attributes Directory src | % FullName) -Match '.Tests' | `
        ForEach-Object { dotnet test --logger trx $_ }
    workingDirectory: $(Build.SourcesDirectory)
    displayName: Test
  
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testRunTitle: "Windows (.NET Framework)"
      platform: "Windows"
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      artifactName: windows-net462
      pathToPublish: '$(Build.SourcesDirectory)\target\bin\'

- job: macos

  displayName: 'macOS'

  pool:
    vmImage: 'macOS 10.13'

  steps:
  - bash: . '$(Build.SourcesDirectory)/ci/ap-setup-osx.sh'
    displayName: Setup

  - bash: dotnet build src/azure-devops-test.sln
    env:
      FrameworkPathOverride: /usr/local/lib/mono/4.6.2-api
    displayName: Compile

  - bash: find ./src -maxdepth 1 -type d -name "*.Tests" | xargs dotnet test --logger trx
    env:
      FrameworkPathOverride: /usr/local/lib/mono/4.6.2-api
    displayName: Run Tests

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testRunTitle: "MacOS 10.13 (Mono 5.14)"
      platform: "MacOS 10.13"
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      artifactName: macos-mono514
      pathToPublish: '$(Build.SourcesDirectory)/target/bin/'

- job: linux

  displayName: 'Centos 7'

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - bash: docker pull jen20/cirrus-dotnet-linux:1.0
    displayName: Pull Docker image for build
    failOnStderr: false

  - task: Docker@1
    displayName: Compile in CentOS 7 Container
    inputs:
      command: 'run'
      imageName: 'jen20/cirrus-dotnet-linux:1.0'
      runInBackground: false
      volumes: '$(Build.SourcesDirectory):/work'
      envVars: |
        FrameworkPathOverride=/usr/lib/mono/4.6.2-api
      containerCommand: ci/ap-build-linux.sh
      workingDirectory: '/work'

  - task: Docker@1
    displayName: Test in CentOS 7 Container
    inputs:
      command: run
      imageName: jen20/cirrus-dotnet-linux:1.0
      runInBackground: false
      volumes: $(Build.SourcesDirectory):/work
      envVars: |
        FrameworkPathOverride=/usr/lib/mono/4.6.2-api
      containerCommand: ci/ap-test-linux.sh
      workingDirectory: /work
  
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testRunTitle: "Centos 7 (Mono 5.14)"
      platform: "Centos 7"
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      artifactName: centos7-mono514
      pathToPublish: '$(Build.SourcesDirectory)/target/bin/'
